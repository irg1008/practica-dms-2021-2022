openapi: 3.0.0
info:
  title: DMS Backend service REST API
  version: "1.0"
  description: |
    REST API for the backend service.

    This is part of the mandatory exercise.

    Diseño y Mantenimiento del Software. Grado en Ingeniería Informática, Universidad de Burgos, 2021-2022.
  contact:
    name: Universidad de Burgos
tags:
  - name: questions
    description: Question Related operations
  - name: answers
    description: Answer related operations
  - name: user
    description: User related operations
  - name: server
    description: Operations about the server itself (e.g., server status querying)
servers:
  - url: /api/v1
paths:
  "/":
    head:
      summary: Health test for the service
      operationId: dms2122backend.presentation.rest.server.health_test
      responses:
        "204":
          description: Success response (will not redirect)
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - server

  /user/{username}/stats:
    get:
      summary: Gets the user stats
      operationId: dms2122backend.presentation.rest.stats.get_stats
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success fetch of user stats.
          content:
            "text/plain":
              schema:
                type: string
        "400":
          description: A user was not provided.
          content:
            "text/plain":
              schema:
                type: string
        "403":
          description: The user does not have the privileges to view the given user's stats.
          content:
            "text/plain":
              schema:
                type: string

    patch:
      summary: Updates the user stats
      operationId: dms2122backend.presentation.rest.stats.post_stats
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A test message
          content:
            "text/plain":
              schema:
                type: string

  # /user/{username}/questions/answer/{id}:
  #   get:
  #     summary: Gets the question answer
  #     operationId: dms2122backend.presentation.rest.test.test
  #     parameters:
  #       - name: username
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: A test message
  #         content:
  #           "text/plain":
  #             schema:
  #               type: string
  #   patch:
  #     summary: Sets the question answer
  #     operationId: dms2122backend.presentation.rest.test.test
  #     parameters:
  #       - name: username
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: A test message
  #         content:
  #           "text/plain":
  #             schema:
  #               type: string

  # /user/{username}/questions/answered:
  #   get:
  #     summary: Gets a user stats
  #     operationId: dms2122backend.presentation.rest.test.test
  #     parameters:
  #       - name: username
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: A test message
  #         content:
  #           "text/plain":
  #             schema:
  #               type: string

  # /user/{username}/questions/unanswered:
  #   get:
  #     summary: Gets a user stats
  #     operationId: dms2122backend.presentation.rest.test.test
  #     parameters:
  #       - name: username
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: A test message
  #         content:
  #           "text/plain":
  #             schema:
  #               type: string

  /question/new:
    post:
      summary: Creates a new question
      operationId: dms2122backend.presentation.rest.question.new
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Question"
            example:
              $ref: "#components/examples/Question"
      responses:
        "200":
          description: OK Response, returns the question ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "403":
          description: The requestor has no privilege to add a question.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: There was an error while creating the question.
          content:
            'text/plain':
              schema:
                type: string
  # /question/{id}:
  #   get:
  #     summary: Authenticates a user
  #     operationId: dms2122backend.presentation.rest.test.test
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: A test message
  #         content:
  #           "text/plain":
  #             schema:
  #               type: string
  #   patch:
  #     summary: Authenticates a user
  #     operationId: dms2122backend.presentation.rest.test.test
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: A test message
  #         content:
  #           "text/plain":
  #             schema:
  #               type: string
  #   delete:
  #     summary: Deletes an unanswered question from the DB.
  #     operationId: dms2122backend.presentation.rest.test.test
  #     responses:
  #       "200":
  #         description: A test message
  #         content:
  #           "text/plain":
  #             schema:
  #               type: string

  # /question/all:
  #   get:
  #     summary: Retrieves all the answered and unanswered questions.
  #     operationId: dms2122backend.presentation.rest.test.test
  #     responses:
  #       "200":
  #         description: A test message
  #         content:
  #           "text/plain":
  #             schema:
  #               type: string

components:
  schemas:
    Question:
      type: object
      properties:
        title:
          type: string
        statement:
          type: string
        correctOption:
          type: string
        incorrectOptions:
          type: array
          items:
            type: string
        imageUrl:
          type: string
        score:
          type: number
          minimum: 0
        penalty:
          type: number
          minimum: 0
          maximum: 1
        public:
          type: boolean
  examples:
    Question:
      summary: "Question Example"
      value:
        title: Titulo
        statement: ¿Cuánto es 1 + 1?
        correctOption: 2
        incorrectOptions: [1,3]
        imageUrl: ""
        score: 1
        penalty: 0.2
        public: true

    
  securitySchemes:
    user_credentials:
      type: http
      scheme: basic
      x-basicInfoFunc: dms2122auth.presentation.rest.security.verify_credentials
    user_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: dms2122auth.presentation.rest.security.verify_token
    api_key:
      type: apiKey
      name: X-ApiKey-Auth
      in: header
      x-apikeyInfoFunc: dms2122auth.presentation.rest.security.verify_api_key
