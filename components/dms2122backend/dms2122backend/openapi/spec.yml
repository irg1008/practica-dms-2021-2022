openapi: 3.0.0
info:
  title: DMS Backend service REST API
  version: "1.0"
  description: |
    REST API for the backend service.

    This is part of the mandatory exercise.

    Diseño y Mantenimiento del Software. Grado en Ingeniería Informática, Universidad de Burgos, 2021-2022.
  contact:
    name: Universidad de Burgos
tags:
  - name: questions
    description: Question Related operations
  - name: answers
    description: Answer related operations
  - name: user
    description: User related operations
  - name: server
    description: Operations about the server itself (e.g., server status querying)
servers:
  - url: /api/v1
paths:

  "/":
    head:
      summary: Health test for the service
      operationId: dms2122backend.presentation.rest.server.health_test
      responses:
        "204":
          description: Success response (will not redirect)
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - server

  /user/{username}/stats:
    get:
      summary: Gets the user stats
      operationId: dms2122backend.presentation.rest.stats.get_stats
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success fetch of user stats.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserStats"
              example:
                $ref: "#/components/examples/UserStats"
        "400":
          description: A user was not provided.
          content:
            "text/plain":
              schema:
                type: string
        "403":
          description: The user does not have the privileges to view the given user's stats.
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - stats
      security:
        - user_token: []
          api_key: []
    patch:
      summary: Updates the user stats.
      operationId: dms2122backend.presentation.rest.stats.update_stats
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Stats to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserStats"
            example:
              $ref: "#/components/examples/UserStats"
      responses:
        "200":
          description: Success update of user stats.
          content:
            "text/plain":
              schema:
                type: string
        "403":
          description: The requestor has no privilege to update user stats.
          content:
            "text/plain":
              schema:
                type: string
        "400":
          description: There was an error while updating user stats.
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - stats
      security:
        - user_token: []
          api_key: []

  /user/{username}/questions/answer/{id}:
    get:
      summary: Gets the question answer
      operationId: dms2122backend.presentation.rest.user.get_question_answer
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success fetch of user answer for specific question.
          content:
            "text/plain":
              schema:
                type: string
        "403":
          description: The requestor has no privilege to get the answer
          content:
            "text/plain":
              schema:
                type: string
        "400":
          description: There was an error while getting the answer.
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - answers
      security:
        - user_token: []
          api_key: []

    post:
      summary: Sets the question answer
      operationId: dms2122backend.presentation.rest.user.post_question_answer
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success set of user answer.
          content:
            "text/plain":
              schema:
                type: string
        "403":
          description: The requestor has no privilege to set the answer.
          content:
            "text/plain":
              schema:
                type: string
        "400":
          description: There was an error while setting the answer.
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - answers
      security:
        - user_token: []
          api_key: []

  /user/{username}/questions/answered:
    get:
      summary: Gets user answered questions
      operationId: dms2122backend.presentation.rest.user.get_answered_questions
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK Response, returns user's answered questions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionResponse"
              example:
                $ref: "#/components/examples/QuestionResponse"
        "403":
          description: The requestor has no privilege to get the questions.
          content:
            "text/plain":
              schema:
                type: string
        "400":
          description: There was an error while getting the questions.
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []

  /user/{username}/questions/unanswered:
    get:
      summary: Gets user unanswered questions
      operationId: dms2122backend.presentation.rest.user.get_unanswered_questions
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK Response, returns user's unanswered questions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionResponse"
              example:
                $ref: "#/components/examples/QuestionResponse"
        "403":
          description: The requestor has no privilege to get the questions.
          content:
            "text/plain":
              schema:
                type: string
        "400":
          description: There was an error while getting the questions.
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []

  /question/all:
    get:
      summary: Retrieves every single stored questions (This should be paginated)
      operationId: dms2122backend.presentation.rest.question.getAll
      responses:
        "200":
          description: Question Lis
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      $ref: "#/components/schemas/QuestionResponse"
                  count:
                    type: integer
      tags:
        - questions
      security:
        - user_token: []
          api_key: []

  /question/new:
    post:
      summary: Creates a new question
      operationId: dms2122backend.presentation.rest.question.new
      requestBody:
        description: A question
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Question"
            example:
              $ref: "#/components/examples/Question"
      responses:
        "200":
          description: OK Response, returns the question ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "403":
          description: The requestor has no privilege to add a question.
          content:
            "text/plain":
              schema:
                type: string
        "400":
          description: There was an error while creating the question.
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []

  /question/{id}:
    get:
      summary: Gets a question by ID
      operationId: dms2122backend.presentation.rest.question.getQ
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK Response, returns the question ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        "403":
          description: The requestor has no privilege to add a question.
          content:
            "text/plain":
              schema:
                type: string
        "400":
          description: There was an error while creating the question.
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []

    patch:
      summary: Updates a question by ID
      operationId: dms2122backend.presentation.rest.question.editQ
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string

      requestBody:
        description: The question to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Question"
            example:
              $ref: "#/components/examples/Question"

      responses:
        "200":
          description: A test message
          content:
            "text/plain":
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []

components:
  schemas:
    Question:
      type: object
      required:
        - title
        - statement
        - correctOption
        - incorrectOptions
        - imageUrl
        - score
        - penalty
      properties:
        title:
          type: string
        statement:
          type: string
        correctOption:
          type: string
        incorrectOptions:
          type: array
          items:
            type: string
        imageUrl:
          type: string
        score:
          type: number
          minimum: 0
        penalty:
          type: number
          minimum: 0
          maximum: 1
        public:
          type: boolean

    QuestionResponse:
      allOf:
        - $ref: "#/components/schemas/Question"
      type: object
      required:
        - id
        - userAns
      properties:
        id:
          type: integer
        userAns:
          type: array
          items:
            type: object
            properties:
              answer:
                type: string
              resCount:
                type: integer

    UserStats:
      type: object
      required:
        - userId
        - nAnswered
        - nCorrect
        - score
      properties:
        userId:
          type: integer
        nAnswered:
          type: integer
          minimum: 0
        nCorrect:
          type: integer
          minimum: 0
        score:
          type: number

  examples:
    Question:
      summary: "Question Example"
      value:
        title: Titulo
        statement: ¿Cuánto es 1 + 1?
<<<<<<< HEAD
        correctOption: "2"
        incorrectOptions: ["1","3"]
=======
        correctOption: 2
        incorrectOptions: [1, 3]
>>>>>>> ddd75e6af6d182b833c4ca93e00ca7f8a097c5f2
        imageUrl: ""
        score: 1
        penalty: 0.2
        public: true

    QuestionResponse:
      summary: "Question Example"
      value:
        id: 1
        title: Titulo
        statement: ¿Cuánto es 1 + 1?
        correctOption: "2"
        incorrectOptions: ["1", "3"]
        imageUrl: ""
        score: 1
        penalty: 0.2
        public: true
        userAns: [{ "1": 0 }, { "3": 5 }, { "2": 250 }]

    UserStats:
      summary: "User Stats Example"
      value:
        userId: 1
        nAnswered: 3
        nCorrect: 2
        score: 0.6

  securitySchemes:
    user_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: dms2122backend.presentation.rest.security.parse_token
    api_key:
      type: apiKey
      name: X-ApiKey-Auth
      in: header
      x-apikeyInfoFunc: dms2122backend.presentation.rest.security.verify_api_key
