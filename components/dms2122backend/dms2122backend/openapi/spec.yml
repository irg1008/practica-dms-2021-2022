openapi: 3.0.0
info:
  title: DMS Backend service REST API
  version: '1.0'
  description: |
    REST API for the authentication service.

    This is part of the mandatory exercise.

    Diseño y Mantenimiento del Software. Grado en Ingeniería Informática, Universidad de Burgos, 2021-2022.
  contact:
    name: Universidad de Burgos
tags:
  - name: session
    description: Session-related operations (e.g., login)
  - name: users
    description: User-related operations (e.g., list, create, search)
  - name: roles
    description: Role-related operations (e.g., grant, revoke)
  - name: server
    description: Operations about the server itself (e.g., server status querying)
servers:
  - url: /api/v1
paths:
  '/':
    head:
      summary: Health test for the service
      operationId: dms2122auth.presentation.rest.server.health_test
      responses:
        '204':
          description: Success response (will not redirect)
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - server
  /auth:
    post:
      summary: Authenticates a user
      operationId: dms2122auth.presentation.rest.server.login
      responses:
        '200':
          description: JWS token
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - session
      security:
        - user_token: []
          api_key: []
        - user_credentials: []
          api_key: []
  /users:
    get:
      summary: Gets a listing of users.
      operationId: dms2122auth.presentation.rest.user.list_users
      responses:
        '200':
          description: A list of users.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UsersFullListModel'
      tags:
        - users
      security:
        - user_token: []
          api_key: []
  /user/new:
    post:
      summary: Creates a new user.
      operationId: dms2122auth.presentation.rest.user.create_user
      requestBody:
        description: New user's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserFullPasswordModel'
      responses:
        '200':
          description: Data of the newly created user (password hash is not returned).
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserFullModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: There is a conflict with some of the user's unique data.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - users
      security:
        - user_token: []
          api_key: []
  /user/{username}/roles:
    get:
      summary: Gets the roles of a certain user.
      operationId: dms2122auth.presentation.rest.userrole.list_user_roles
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of roles of the user
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
        '400':
          description: A user was not provided.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The user does not have the privileges to view the given user's roles.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - users
        - roles
      security:
        - user_token: []
          api_key: []
  /user/{username}/role/{rolename}:
    get:
      summary: Gets whether a user has a certain role or not.
      operationId: dms2122auth.presentation.rest.userrole.user_has_role
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: rolename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The given user has the given role.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The given user does not have the given role, or either the user or the role does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - users
        - roles
      security:
        - user_token: []
          api_key: []
    post:
      summary: Grants a role to a user.
      operationId: dms2122auth.presentation.rest.userrole.grant_role
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: rolename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The given user has been granted the role.
          content:
            'text/plain':
              schema:
                type: string
        '400':
          description: A mandatory parameter was not given.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requestor has no privilege to grant a role.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The given user does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - users
        - roles
      security:
        - user_token: []
          api_key: []
    delete:
      summary: Revokes a role from a user.
      operationId: dms2122auth.presentation.rest.userrole.revoke_role
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: rolename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The given user has been revoked the role.
          content:
            'text/plain':
              schema:
                type: string
        '400':
          description: A mandatory parameter was not given.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requestor has no privilege to revoke the role from the given user.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - users
        - roles
      security:
        - user_token: []
          api_key: []
components:
  schemas:
    UserFullModel:
      type: object
      properties:
        username:
          type: string
      required:
        - username
    UserFullPasswordModel:
      allOf:
        - $ref: '#/components/schemas/UserFullModel'
        - type: object
          properties:
            password:
              type: string
          required:
            - password
    UsersFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/UserFullModel'
  securitySchemes:
    user_credentials:
      type: http
      scheme: basic
      x-basicInfoFunc: dms2122auth.presentation.rest.security.verify_credentials
    user_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: dms2122auth.presentation.rest.security.verify_token
    api_key:
      type: apiKey
      name: X-ApiKey-Auth
      in: header
      x-apikeyInfoFunc: dms2122auth.presentation.rest.security.verify_api_key
