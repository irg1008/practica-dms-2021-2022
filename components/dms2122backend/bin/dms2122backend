#!/usr/bin/env python3

# import time

# print("This file is a stub. Replace this behaviour with the actual service code.")

# while True:
#     time.sleep(1)

# ----------------------------------------------------------------

#!/usr/bin/env python3

import os
import inspect
import logging
from typing import Dict
from dms2122backend.service.auth.authservice import AuthService
import connexion
from connexion.apps.flask_app import FlaskJSONEncoder
from flask import current_app
from flask.logging import default_handler
from itsdangerous import TimedJSONWebSignatureSerializer
import dms2122backend
from dms2122backend.data.config.backendconfiguration import BackendConfiguration
from dms2122backend.data.db import Schema


if __name__ == "__main__":
    cfg: BackendConfiguration = BackendConfiguration()
    cfg.load_from_file(cfg.default_config_file())
    db: Schema = Schema(cfg)
    jws: TimedJSONWebSignatureSerializer = TimedJSONWebSignatureSerializer(
        cfg.get_jws_secret(), expires_in=cfg.get_jws_ttl()
    )
    auth_service_cfg: Dict = cfg.get_auth_service()
    auth_service = AuthService(
        auth_service_cfg["host"],
        auth_service_cfg["port"],
        apikey_header="X-ApiKey-Auth",
        apikey_secret=auth_service_cfg["apikey_secret"],
    )

    specification_dir = os.path.dirname(inspect.getfile(dms2122backend)) + "/openapi"
    app = connexion.FlaskApp(
        __name__,
        specification_dir=specification_dir,
        options={"swagger_ui": True, "serve_spec": True},
    )
    app.add_api("spec.yml", strict_validation=True)
    flask_app = app.app
    flask_app.json_encoder = FlaskJSONEncoder
    with flask_app.app_context():
        current_app.db = db
        current_app.cfg = cfg
        current_app.jws = jws
        current_app.auth_service = auth_service

    root_logger = logging.getLogger()
    root_logger.addHandler(default_handler)

    app.run(
        host=cfg.get_service_host(),
        port=cfg.get_service_port(),
        debug=cfg.get_debug_flag(),
        use_reloader=False,
    )
